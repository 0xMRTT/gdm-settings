#!/usr/bin/env python3

from os import environ, path, makedirs
from subprocess import call

prefix = environ.get('MESON_INSTALL_PREFIX', '/usr/local')
datadir = path.join(prefix, 'share')
destdir = environ.get('DESTDIR', '')
destdir_prefix = environ.get('MESON_INSTALL_DESTDIR_PREFIX', '/usr/local')
destdir_datadir = path.join(destdir_prefix, 'share')
use_relative_symlinks = environ.get('USE_RELATIVE_SYMLINKS', 'false')

makedirs(path.join(destdir_prefix, 'bin'), exist_ok=True)

if use_relative_symlinks == 'true':
    print('Creating relative symlinks...')
    call(['ln', '-sfr', path.join(destdir_datadir, '@project_name@/@project_name@.py'), path.join(destdir_prefix, 'bin', '@project_name@')])
else:
    print('Creating absolute symlinks...')
    call(['ln', '-sf', path.join(datadir, '@project_name@/@project_name@.py'), path.join(destdir_prefix, 'bin', '@project_name@')])

# Package managers set this so we don't need to run
if not destdir:
    print('Updating icon cache...')
    call(['gtk-update-icon-cache', '-qtf', path.join(datadir, 'icons', 'hicolor')])

    print('Updating desktop database...')
    call(['update-desktop-database', '-q', path.join(datadir, 'applications')])

    print('Compiling GSettings schemas...')
    call(['glib-compile-schemas', path.join(datadir, 'glib-2.0', 'schemas')])


